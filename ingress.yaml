# Step 3: Ingress - Expose the service externally via samayamu.org
# This routes external traffic from samayamu.org to your analog-clock-service
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: samayamu-ingress  # Separate from your existing advait-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"  # Automatic SSL certificate
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - samayamu.org
        - www.samayamu.org
      secretName: samayamu-tls  # SSL certificate will be stored here
  rules:
    # Route samayamu.org traffic to your analog clock service
    - host: samayamu.org
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: analog-clock-service  # Points to your service from Step 2
                port:
                  number: 80
    
    # Route www.samayamu.org traffic (optional but good practice)
    - host: www.samayamu.org
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: analog-clock-service
                port:
                  number: 80
